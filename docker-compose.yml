services:
  nginx:
    # container_name: nginx
    depends_on:
      - frontend
    build: ./requirements/nginx
    ports:
      - 8080:8080
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  frontend:
    # container_name: front
    depends_on:
      - backend
    build: ./requirements/frontend
    volumes:
      - ./requirements/frontend/srcs:/pong/
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  backend:
    # container_name: back
    depends_on:
      - postgres
    build: ./requirements/backend
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    volumes:
      - ./requirements/backend/srcs:/pong/
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
        
  postgres:
    # container_name: pg
    image: postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres:/data/postgres
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

volumes:
  postgres:
  # backend:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: /requirements/backend/srcs/