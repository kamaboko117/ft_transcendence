upstream backend {
  server backend_tr:3000;
}

upstream frontend {
  server frontend_tr:5173;
}

upstream hmr {
  server frontend_tr:5174;
}

server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    ssl_protocols TLSv1.3;
    ssl_certificate certificate.crt;
    ssl_certificate_key certificate.key;
  	root /var/www/html;

    location /socket.io/ {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_redirect off;
      proxy_pass https://backend;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location /api/ {
      client_body_buffer_size 100m;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_redirect off;
      proxy_pass https://backend;
      rewrite /api/(.*) /$1 break;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
    location / {
      proxy_pass https://frontend;
    }
}
#vite hot reload otherwise ws can't communicate
#(see firefox/chrome console tool and comment this part)
server {
  listen 5174 ssl;
  listen [::]:5174 ssl;
  ssl_protocols TLSv1.3;
  ssl_certificate certificate.crt;
  ssl_certificate_key certificate.key;

  location / {
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    proxy_pass https://hmr;
    proxy_ssl_certificate certificate.crt;
    proxy_ssl_certificate_key certificate.key;
    proxy_ssl_trusted_certificate certificate.crt;
    proxy_ssl_session_reuse on;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}